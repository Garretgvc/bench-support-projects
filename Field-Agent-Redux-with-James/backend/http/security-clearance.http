
@url = http://localhost:8080/api/security/clearance

### [ ] GET all security clearances

GET {{url}} HTTP/1.1

### [ ] GET a security clearance by ID

GET {{url}}/1 HTTP/1.1

### [ ] For GET return a 404 if security clearance is not found

GET {{url}}/999 HTTP/1.1

### [ ] POST a security clearance

POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "name": "Test"
}

### [ ] For POST return a 400 if the security clearance fails one of the domain rules
### [ ] Security clearance name is required

POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "name": ""
}

### [ ] For POST return a 400 if the security clearance fails one of the domain rules
### [ ] Name cannot be duplicated

POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "name": "Top Secret"
}

### [ ] PUT an existing security clearance

PUT {{url}}/1 HTTP/1.1
Content-Type: application/json

{
  "securityClearanceId": 1,
  "name": "Top Secret Updated"
}

### [ ] For PUT return a 400 if the security clearance fails one of the domain rules

PUT {{url}}/1 HTTP/1.1
Content-Type: application/json

{
  "securityClearanceId": 1,
  "name": ""
}

### [ ] DELETE a security clearance that is not in use by ID

DELETE {{url}}/2 HTTP/1.1

### [ ] For DELETE return a 404 if the security clearance is not found

DELETE {{url}}/999 HTTP/1.1

### [ ] For DELETE return a 400 if the security clearance is in use 

DELETE {{url}}/1 HTTP/1.1
